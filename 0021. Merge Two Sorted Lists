Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of 
the first two lists.
Example:
Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4


// O(m+n) || O(1)
var mergeTwoLists = function(l1, l2) {
    let dummy = new ListNode(-1);
    let cur = dummy;
    while (l1 && l2) {
        if (l1.val<=l2.val) {
            cur.next = l1;
            l1 = l1.next;
        } else {
            cur.next = l2;
            l2 = l2.next;
        }
        cur = cur.next;
    }
    if (l1 === null) { cur.next = l2; };
    if (l2 === null) { cur.next = l1; };
    return dummy.next;
}


// O(m+n) || O(m+n)
// var mergeTwoLists = function(l1, l2) {
//     if (l1===null) return l2;
//     else if (l2===null) return l1;
//     else if (l1.val<l2.val) {
//         l1.next = mergeTwoLists(l1.next, l2);
//         return l1;
//     } else {
//         l2.next = mergeTwoLists(l1, l2.next);
//         return l2;
//     };
// };
