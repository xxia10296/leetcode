Given an integer, write an algorithm to convert it to hexadecimal. For negative integer, twoâ€™s complement method is used.

Note:

All letters in hexadecimal (a-f) must be in lowercase.
The hexadecimal string must not contain extra leading 0s. If the number is zero, it is represented by a single zero character '0'; otherwise, the first character in the hexadecimal string will not be the zero character.
The given number is guaranteed to fit within the range of a 32-bit signed integer.
You must not use any method provided by the library which converts/formats the number to hex directly.
Example 1:

Input:
26
Output:
"1a"
Example 2:
Input:
-1
Output:
"ffffffff"

var toHex = function(num) {
    let hex = '0123456789abcdef';
    let res = '';
    if (num < 0) {
        num += Math.pow(2, 32);
    };
    while (num > 0) {
        res = hex[num%16] + res;
        num = Math.floor(num/16);
    };
    
    if (!res) return '0';
    else return res;
};
