

Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.
Example 1:
Input: "()"
Output: true
Example 2:
Input: "()[]{}"
Output: true
Example 3:
Input: "(]"
Output: false

Summary: - Use stack to store the closing one (with same type): If match, pop out the pair. If not match, the stack won't be empty. 

Time: O(n)
Space: O(n)

var isValid = function(s) {
    let stack=[];
    for (var i=0; i<s.length; i++){
        if(s[i]==="("){
            stack.push(")");
        } else if (s[i]==="[") {
            stack.push("]");
        } else if (s[i]==="{") {
            stack.push("}")
        } else if (stack.pop() !== s[i]){
            return false;
        }
    }
    return stack.length===0;
};
