Given preorder and inorder traversal of a tree, construct the binary tree.

Note:
You may assume that duplicates do not exist in the tree.
For example, given
preorder = [3,9,20,15,7]
inorder = [9,3,15,20,7]
Return the following binary tree:

    3
   / \
  9  20
    /  \
   15   7
   
   
var buildTree = function(preorder, inorder) {
    let hash = {};
    for (let i = 0 ; i < inorder.length; i++) {
        hash[inorder[i]] = i;
    }
    var build = function(start, end) {
        if (start > end) return null;
        let root = new TreeNode(preorder.shift());
        root.left = build(start, hash[root.val] - 1);
        root.right = build(hash[root.val] + 1, end);
        return root;
    }
    return build(0, inorder.length-1);
};
