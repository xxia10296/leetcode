

Given an array A of strings made only from lowercase letters, return a list of all characters that show up in all strings within the list (including duplicates).  For example, if a character occurs 3 times in all strings but not 4 times, you need to include that character three times in the final answer.

You may return the answer in any order.
Example 1:

Input: ["bella","label","roller"]
Output: ["e","l","l"]
Example 2:

Input: ["cool","lock","cook"]
Output: ["c","o"]

Note:
1 <= A.length <= 100
1 <= A[i].length <= 100
A[i][j] is a lowercase letter

var commonChars = function(A) {
    let result = [];
    let min_freq = new Array(26).fill(10000);
    for (let i = 0; i < A.length; i++) {
        let str_freq = new Array(26).fill(0);
        for (let j = 0; j < A[i].length; j++) {
            str_freq[A[i].charCodeAt(j) - 97]++;  
        }
        for (let z = 0; z < 26; z++) {
            min_freq[z] = Math.min(min_freq[z], str_freq[z]);
        }
    }
    for (let k = 0; k < 26; k++) {
        while (min_freq[k] > 0) {
            result.push(String.fromCharCode(k+97))
            min_freq[k]--;
        }
    }
    return result
};

