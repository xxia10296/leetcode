Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).

You may assume that the intervals were initially sorted according to their start times.

Example 1:

Input: intervals = [[1,3],[6,9]], newInterval = [2,5]
Output: [[1,5],[6,9]]

var insert = function(intervals, newInterval) {
    let idx = 0;
    for (let i = 0; i < intervals.length; i++) {
        if (intervals[i][0] > newInterval[0]) {
            idx = i;
            break;
        };
    };
    intervals.splice(idx, 0, newInterval);
    intervals.sort((a, b) => a[0]===b[0] ? a[1]-b[1] : a[0]-b[0]);
    
    let res = [intervals[0]];
    let index = 0;
    for (let i = 1; i < intervals.length; i++) {
        if (res[index][1] >= intervals[i][0]) {
            res[index][0] = Math.min(res[index][0], intervals[i][0]);
            res[index][1] = Math.max(res[index][1], intervals[i][1]);
        } else {
            res.push(intervals[i]);
            index++;
        };
    };
    return res;  
};
