Given inorder and postorder traversal of a tree, construct the binary tree.

Note:
You may assume that duplicates do not exist in the tree.

For example, given

inorder = [9,3,15,20,7]
postorder = [9,15,7,20,3]
Return the following binary tree:

    3
   / \
  9  20
    /  \
   15   7
   

var buildTree = function(inorder, postorder) {
    let hash = {};
    for (let i = 0; i < inorder.length; i++) {
        hash[inorder[i]] = i;
    }
    var build = function(start, end) {
        if (start > end) return null;
        let root = new TreeNode(postorder.pop());
        root.right = build(hash[root.val] + 1, end);
        root.left = build(start, hash[root.val]-1);
        return root;
    }
    return build(0, inorder.length-1);
};
