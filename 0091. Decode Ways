A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given a non-empty string containing only digits, determine the total number of ways to decode it.

Example 1:

Input: "12"
Output: 2
Explanation: It could be decoded as "AB" (1 2) or "L" (12).

var numDecodings = function(s) {
    if (s === null || s.length === 0) return 0;
    let N = s.length;
    let dp = new Array(N+1).fill(0);
    dp[0] = 1;
    if (s[0] !== '0') {
        dp[1] = 1;
    } else {
        dp[1] = 0;
    }
    
    for (let i = 2; i <= N; i++) {
        if (s[i-1] !== '0') {
            dp[i] += dp[i-1];
        };
        if (s[i-2] === '1' || s[i-2] === '2' && s[i-1] <= '6') {
            dp[i] += dp[i-2];
        };
    };
    return dp[N];
};

// top-down
// var numDecodings = function(s) {
//     let arrStr = s.split('');
//     var recur = function(index) {
//         if (index === 0 && arrStr[index] === '0' ) return 0;
//         if (index <= 0) return 1;
//         let res = 0;
//         let cur = arrStr[index];
//         let pre = arrStr[index-1];
//         if (cur > '0') {
//             res += recur(index-1);
//         };
//         if (pre === '1' || (pre === '2' && cur <= '6')) {
//             res += recur(index-2);
//         };
//         return res;
//     };
    
//     return recur(arrStr.length-1);
// };
