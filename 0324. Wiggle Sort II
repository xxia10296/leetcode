Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

Example 1:

Input: nums = [1, 5, 1, 1, 6, 4]
Output: One possible answer is [1, 4, 1, 5, 1, 6].
Example 2:

Input: nums = [1, 3, 2, 2, 3, 1]
Output: One possible answer is [2, 3, 1, 3, 1, 2].
Note:
You may assume all input has valid answer.

Follow Up:
Can you do it in O(n) time and/or in-place with O(1) extra space?

var wiggleSort = function(nums) {
    nums.sort((a, b) => a-b);
    let N = nums.length;
    let mid = Math.floor(N/2);
    if (N %2 !==0) mid++;
    let small = nums.splice(0, mid)
    let large = nums.splice(0, nums.length);
    
    for (let i = 0; i < N; i++) {
        if (i % 2 === 0) {
            nums[i] = small.pop()
        } else {
            nums[i] = large.pop();
        }
    }
};



