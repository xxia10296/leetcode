

Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Example 1:

Input: 121
Output: true
Example 2:

Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.

Summary: 3 edge cases + if reverse(num)===num, that is palindrome.
Time complexity : O(log 10(n)). We divided the input by 10 for every iteration. 
Space complexity : O(1).

function isPalindrome(x) {
  if (x < 0) return false;              // all negative nums are not palindrome
  if (x < 10) return true;              // all single digit nums are palindrome
  if (x % 10 === 0) return false;       // last digit is 0, are not palindrom

  let rev = 0;
  while (rev < x) {
    rev *= 10;
    rev += x%10;
    x = Math.floor(x/10);
  }
  return rev === x || Math.floor(rev/10) === x;
}
