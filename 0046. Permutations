Given a collection of distinct integers, return all possible permutations.

Example:

Input: [1,2,3]
Output:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]

var permute = function(nums) {
    let res = [];
    dfs(nums, [], res);
    return res;
    
    function dfs(nums, cur, res) {
        if (cur.length && nums.length===0) {
            res.push(cur);
        } else {
            for (let i = 0; i < nums.length; i++) {
                let newNums = nums.slice(0, i).concat(nums.slice(i+1));
                let newCur = cur.concat(nums[i]);
                dfs(newNums, newCur, res)
            }
        }
    }
};
