Given a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.

The same repeated number may be chosen from candidates unlimited number of times.

Note:

All numbers (including target) will be positive integers.
The solution set must not contain duplicate combinations.
Example 1:

Input: candidates = [2,3,6,7], target = 7,
A solution set is:
[
  [7],
  [2,2,3]
]
Example 2:

Input: candidates = [2,3,5], target = 8,
A solution set is:
[
  [2,2,2,2],
  [2,3,3],
  [3,5]
]

// var combinationSum = function(candidates, target) {
//     let res = [], curArr = [];
//     candidates.sort((a, b) => a-b);
//     dfs(candidates, target, 0, curArr, res);
//     return res;
// };

// var dfs = function(candidates, target, startIndex, curArr, res) {
//     if (target === 0) {
//         res.push([...curArr]);
//     }
    
//     for (let i = startIndex; i < candidates.length; i++) {
//         if (candidates[i] > target) break;
//         curArr.push(candidates[i]);
//         dfs(candidates, target-candidates[i], i, curArr, res)
//         curArr.pop();
//     }
// }
